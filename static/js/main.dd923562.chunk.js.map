{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleReverseClick","str","index","length","handleCapitalize","split","map","el","charAt","slice","join","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","handleClearClick","defaultProps","aboutText","Alert","alert","word","lower","capitalize","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.dd923562.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n        <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n      </ul>\r\n      <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n      <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input mx-3\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'TextUtils',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    \r\n    const handleUpClick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        //console.log(\"Lowercase was clicked\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    }\r\n\r\n    // const handleTitleClick = ()=>{\r\n    //     let newText = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n    //     setText(newText)\r\n    // }\r\n\r\n    const handleReverseClick = () => {\r\n        let str=\"\";\r\n        for (let index = text.length-1; index >=0; index--) {\r\n          str+= text[index];\r\n          \r\n        }\r\n         return setText(str);\r\n      }\r\n\r\n    const handleCapitalize = () => {\r\n        let newText = text.split(\" \").map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Capitalize!\", \"success\");\r\n     }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipbord!\", \"success\");\r\n    }   \r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra space removed!\", \"success\")\r\n    }\r\n\r\n    const speak = () => {\r\n            let msg = new SpeechSynthesisUtterance();\r\n            msg.text = text;\r\n            window.speechSynthesis.speak(msg);\r\n            props.showAlert(\"Speaker On!\", \"success\");\r\n        }\r\n        \r\n    const handleClearClick = () => {\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Cleared Textarea!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        //console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n      \r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode === 'dark'?'grey':'white',color: props.mode === 'dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleReverseClick}>Convert to Reverse case</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCapitalize}>Convert to Capitalize case</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove space</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={speak}>Speaker Button</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear text</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode === 'dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox about to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","//import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743  ';\n      showAlert(\"Dark mode has enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing Mode';\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} />\n    {/*<Navbar/>*/}\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* \"exact\" is display exact page.\n      /users --> Component 1\n      /users/home --> --> Component 2 */}\n      {/* <Routes> */}\n          {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>} /> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* <Route exact path=\"/about\" element={<About />} /> */}\n          \n      {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}